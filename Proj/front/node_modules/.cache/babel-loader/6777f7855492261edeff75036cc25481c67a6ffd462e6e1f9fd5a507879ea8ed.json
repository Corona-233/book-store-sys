{"ast":null,"code":"export default {\n  name: \"Login\",\n  data() {\n    return {\n      loginForm: {\n        no: '',\n        password: ''\n      },\n      rules: {\n        no: [{\n          required: true,\n          message: '请输入帐号',\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    confirm() {\n      this.confirm_disabled = true;\n      this.$refs.loginForm.validate(valid => {\n        if (valid) {\n          // 简单模拟登录成功\n          const mockUser = {\n            id: 1,\n            no: '100001',\n            name: 'Corona',\n            password: '123456',\n            age: 18,\n            sex: 1,\n            phone: '12345678',\n            role_id: 0,\n            isValid: 'Y'\n          };\n          const mockMenus = [{\n            menuname: '首页',\n            menuclick: 'Home',\n            menucomponent: 'Home'\n          }, {\n            menuname: '用户管理',\n            menuclick: 'user/UserManage',\n            menucomponent: 'user/UserManage'\n          }, {\n            menuname: '商品管理',\n            menuclick: 'goods/GoodsManage',\n            menucomponent: 'goods/GoodsManage'\n          }, {\n            menuname: '商品分类管理',\n            menuclick: 'goodstype/GoodstypeManage',\n            menucomponent: 'goodstype/GoodstypeManage'\n          }, {\n            menuname: '库存管理',\n            menuclick: 'storage/StorageManage',\n            menucomponent: 'storage/StorageManage'\n          }, {\n            menuname: '管理员管理',\n            menuclick: 'admin/AdminManage',\n            menucomponent: 'admin/AdminManage'\n          }];\n\n          // 存储用户信息\n          sessionStorage.setItem(\"CurUser\", JSON.stringify(mockUser));\n          console.log('登录成功，用户信息：', mockUser);\n          console.log('菜单数据：', mockMenus);\n          this.$store.commit(\"setMenu\", mockMenus);\n\n          // 跳转到主页\n          this.$router.replace('/Index');\n        } else {\n          this.confirm_disabled = false;\n          return false;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","loginForm","no","password","rules","required","message","trigger","methods","confirm","confirm_disabled","$refs","validate","valid","mockUser","id","age","sex","phone","role_id","isValid","mockMenus","menuname","menuclick","menucomponent","sessionStorage","setItem","JSON","stringify","console","log","$store","commit","$router","replace"],"sources":["src/components/Login.vue"],"sourcesContent":["<script>\r\nexport default {\r\n  name: \"Login\",\r\n  data(){\r\n    return{\r\n      loginForm:{\r\n        no: '',\r\n        password: ''\r\n      },\r\n      rules:{\r\n        no: [\r\n          { required: true, message: '请输入帐号', trigger: 'blur' }\r\n        ],\r\n        password: [\r\n          { required: true, message: '请输入密码', trigger: 'blur' }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    confirm(){\r\n      this.confirm_disabled = true;\r\n      this.$refs.loginForm.validate((valid)=>{\r\n        if (valid) {\r\n          // 简单模拟登录成功\r\n          const mockUser = {\r\n            id: 1,\r\n            no: '100001',\r\n            name: 'Corona',\r\n            password: '123456',\r\n            age: 18,\r\n            sex: 1,\r\n            phone: '12345678',\r\n            role_id: 0,\r\n            isValid: 'Y'\r\n          };\r\n          \r\n          const mockMenus = [\r\n            {\r\n              menuname: '首页',\r\n              menuclick: 'Home',\r\n              menucomponent: 'Home'\r\n            },\r\n            {\r\n              menuname: '用户管理',\r\n              menuclick: 'user/UserManage',\r\n              menucomponent: 'user/UserManage'\r\n            },\r\n            {\r\n              menuname: '商品管理',\r\n              menuclick: 'goods/GoodsManage',\r\n              menucomponent: 'goods/GoodsManage'\r\n            },\r\n            {\r\n              menuname: '商品分类管理',\r\n              menuclick: 'goodstype/GoodstypeManage',\r\n              menucomponent: 'goodstype/GoodstypeManage'\r\n            },\r\n            {\r\n              menuname: '库存管理',\r\n              menuclick: 'storage/StorageManage',\r\n              menucomponent: 'storage/StorageManage'\r\n            },\r\n            {\r\n              menuname: '管理员管理',\r\n              menuclick: 'admin/AdminManage',\r\n              menucomponent: 'admin/AdminManage'\r\n            }\r\n          ];\r\n          \r\n          // 存储用户信息\r\n          sessionStorage.setItem(\"CurUser\", JSON.stringify(mockUser));\r\n          console.log('登录成功，用户信息：', mockUser);\r\n          console.log('菜单数据：', mockMenus);\r\n          this.$store.commit(\"setMenu\", mockMenus);\r\n\r\n          // 跳转到主页\r\n          this.$router.replace('/Index');\r\n        }else{\r\n          this.confirm_disabled=false;\r\n          return false;\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div class=\"loginBody\">\r\n    <img  class=\"img\" src=\"./img/sandk.jpg\"/>\r\n    <div class=\"loginDiv\">\r\n      <div class=\"login-content\">\r\n        <h1 class=\"login-title\" style=\"margin-bottom: 24px; color: rgba(255,255,255,0.6)\">用户登录</h1>\r\n        <el-form :model=\"loginForm\" label-width=\"100px\"\r\n                 :rules=\"rules\" ref=\"loginForm\">\r\n          <el-form-item label=\"帐号\" prop=\"no\">\r\n            <el-input style=\"width: 220px\" type=\"text\" v-model=\"loginForm.no\"\r\n                      autocomplete=\"off\" size=\"small\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item label=\"密码\" style=\"margin-top: 30px\" prop=\"password\">\r\n            <el-input style=\"width: 220px\" type=\"password\" v-model=\"loginForm.password\"\r\n                      show-password autocomplete=\"off\" size=\"small\" @keyup.enter.native=\"confirm\"></el-input>\r\n          </el-form-item>\r\n          <el-form-item style=\"margin-left: 70px; margin-top: 30px\">\r\n            <el-button type=\"primary\" @click=\"confirm\" >确 定</el-button>\r\n          </el-form-item>\r\n        </el-form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n  .loginBody {\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n  .img {\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n  .loginDiv {\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    margin-top: -200px;\r\n    margin-left: -240px;\r\n    width: 450px;\r\n    height: 330px;\r\n    border-radius: 5%;\r\n    backdrop-filter: blur(50px);\r\n    box-shadow: 0 0 6px 2px rgba(0, 0, 0, 0.2);\r\n  }\r\n  .login-title {\r\n    margin: 20px 0;\r\n    text-align: center;\r\n  }\r\n  .login-content {\r\n    width: 400px;\r\n    height: 250px;\r\n    position: absolute;\r\n    top: 25px;\r\n    left: 25px;\r\n  }\r\n</style>"],"mappings":"AACA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;QACAC,EAAA;QACAC,QAAA;MACA;MACAC,KAAA;QACAF,EAAA,GACA;UAAAG,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA,EACA;QACAJ,QAAA,GACA;UAAAE,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;IACA;EACA;EACAC,OAAA;IACAC,QAAA;MACA,KAAAC,gBAAA;MACA,KAAAC,KAAA,CAAAV,SAAA,CAAAW,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA;UACA,MAAAC,QAAA;YACAC,EAAA;YACAb,EAAA;YACAH,IAAA;YACAI,QAAA;YACAa,GAAA;YACAC,GAAA;YACAC,KAAA;YACAC,OAAA;YACAC,OAAA;UACA;UAEA,MAAAC,SAAA,IACA;YACAC,QAAA;YACAC,SAAA;YACAC,aAAA;UACA,GACA;YACAF,QAAA;YACAC,SAAA;YACAC,aAAA;UACA,GACA;YACAF,QAAA;YACAC,SAAA;YACAC,aAAA;UACA,GACA;YACAF,QAAA;YACAC,SAAA;YACAC,aAAA;UACA,GACA;YACAF,QAAA;YACAC,SAAA;YACAC,aAAA;UACA,GACA;YACAF,QAAA;YACAC,SAAA;YACAC,aAAA;UACA,EACA;;UAEA;UACAC,cAAA,CAAAC,OAAA,YAAAC,IAAA,CAAAC,SAAA,CAAAd,QAAA;UACAe,OAAA,CAAAC,GAAA,eAAAhB,QAAA;UACAe,OAAA,CAAAC,GAAA,UAAAT,SAAA;UACA,KAAAU,MAAA,CAAAC,MAAA,YAAAX,SAAA;;UAEA;UACA,KAAAY,OAAA,CAAAC,OAAA;QACA;UACA,KAAAxB,gBAAA;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}